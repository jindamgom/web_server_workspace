<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
<!--    <select id="findById" resultType="com.sh.mybatis.member.model.entity.Member">-->
    <select id="findById" resultType="member">


<!--   멀티 라인 가능
       #{id} 전달된 id값으로 치환 java jdbc에선 ?로 사용했었음.
       id="findById" 에서 id는 태그 식별자
       resultType ResultSet이 한행이 변환될 타입 (fullname or alias)
       위에 패키지명까지 합쳐서 풀로 적는게 fullname
       1211
       full name에서 alias로 변경. (config에서 별칭설정해줘야한다)
-->
        select
            *
        from
            member
        where
            id = #{id}
    </select>

    <!--
        1.resultType은 꼭 작성하자.
        2.resultType의 속성은 한 행과 매칭되는 타입을 작성한다.
        3.내가 받고 싶은건 리스트이지만, member 한행 한행이 모여서 list가 되는 것

        -->
    <select id="findAll" resultType="member">
        select
        *
        from
            member
        order by
            reg_date desc

    </select>


    <select id="findByName" resultType="member">
        select
        *
        from
            member
        where
            name like '%' ||#{name} ||'%'

    </select>

    <select id="findByGender" resultType="member">
        select
        *
        from
        member
        where
        gender = #{gender}
    </select>


    <!--    select문에만 resultType 명시, insert에는 기본이라 안적어도 됨
            insert시 넘어가는건 member객체라 필드값만 적어주면 ok
    -->
    <insert id="insertMember">
        insert into
            member
        values(
            #{id},#{password},#{name},#{role},#{gender},#{birthday},
            #{email},#{phone},#{hobby, typeHandler=ListStringTypeHandler},default,default
        )
    </insert>

    <update id = "updateMember">
        update
            member
        set
            name = #{name},
            password = #{password},
            role = #{role},
            gender = #{gender},
            birthday = #{birthday},
            email = #{email},
            phone = #{phone}
        where
            id = #{id}
    </update>

    <delete id="deleteMember">
        delete
        from
            member
        where
            id = #{id}
    </delete>
</mapper>